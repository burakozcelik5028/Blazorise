@page "/fetchdata"
@using Blazorise.DataGrid
@using BlazorDemo.Data
@inject WeatherForecastService ForecastService

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from a service.</p>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
<DataGrid TItem="WeatherForecast" Data="@forecasts" Sortable="true" Editable="true" ShowPager="true" PageSize="5" Filterable="true">
    <DataGridCommandColumn TItem="WeatherForecast">
        <NewCommandTemplate>
            <Blazorise.Button Color="Color.Success" Clicked="@context.Clicked">New</Blazorise.Button>
        </NewCommandTemplate>
    </DataGridCommandColumn>

    <DataGridColumn TItem="WeatherForecast" Field="@nameof(WeatherForecast.Date)" Caption="Date" Editable="true"></DataGridColumn>
    <DataGridColumn TItem="WeatherForecast" Field="@nameof(WeatherForecast.TemperatureC)" Caption="Temp(C)" Editable="true"></DataGridColumn>
    <DataGridColumn TItem="WeatherForecast" Field="@nameof(WeatherForecast.TemperatureF)" Caption="Temp(F)" Editable="true"></DataGridColumn>
    <DataGridColumn TItem="WeatherForecast" Field="@nameof(WeatherForecast.Summary)" Caption="Summary" Editable="true"></DataGridColumn>
</DataGrid>
}

@code {
    private WeatherForecast[] forecasts;

    protected override async Task OnInitializedAsync()
    {
        forecasts = await ForecastService.GetForecastAsync(DateTime.Now);
    }
}
